<launch>
  <!-- General Simulation Settings -->
  <arg name="world_name"                default="basic"/>
  <arg name="paused"                    default="true"/>
  <arg name="gui"                       default="true"/>
  <arg name="debug"                     default="false"/>
  <arg name="verbose"                   default="false"/>

  <!-- Drone Fleet Configuration -->
  <arg name="drone_count"               default="1"/>
  <arg name="drone_namespaces_list"     default="['hummingbird1']"/>
  <arg name="mav_name_common"           default="hummingbird"/>

  <!-- Individual Drone Start/End Points & Spawn Coords -->
  <arg name="ns1" default="hummingbird1"/><arg name="x1" default="20.0"/><arg name="y1" default="10.0"/><arg name="z1" default="0.1"/><arg name="start1" default="[20.0, 10.0, 3.0]"/><arg name="end1" default="[-20.0, -10.0, 7.0]"/>

  <!-- ==================== COMMON CONTROLLER ARGUMENTS ==================== -->
  <!-- General -->
  <arg name="use_model_states_common"   default="true" />
  <arg name="control_rate_common"       default="1000.0" />
  <!-- Trajectory & Hover -->
  <arg name="trajectory_duration_common" default="50.0" />
  <arg name="fixed_yaw_deg_common"      default="180.0" />
  <arg name="hover_pos_threshold_common" default="0.2" />
  <arg name="hover_vel_threshold_common" default="0.2" />
  <arg name="hover_stabilization_secs_common" default="1.0" />
  <arg name="hover_yaw_ramp_secs_common" default="0.5" />

  <!-- Obstacles -->
  <arg name="dynamic_obstacles_common" default="[]" />
  <!-- ====================================================================== -->


  <!-- Launch Gazebo World ONCE -->
  <include file="$(find clf_cbf_qp)/launch/launch_gazebo_world.launch">
      <arg name="world_name" value="$(arg world_name)"/>
      <arg name="paused"     value="$(arg paused)"/>
      <arg name="gui"        value="$(arg gui)"/>
      <arg name="debug"      value="$(arg debug)"/>
      <arg name="verbose"    value="$(arg verbose)"/>
  </include>

  <!-- Define Unique Robot Descriptions Globally -->
  <param name="/robot_description_$(arg ns1)" command="$(find xacro)/xacro '$(find clf_cbf_qp)/urdf/my_hummingbird.xacro' mav_name:=$(arg mav_name_common) namespace:=$(arg ns1) enable_logging:=false enable_ground_truth:=true enable_mavlink_interface:=false log_file:=$(arg ns1) wait_to_record_bag:=false gazebo_snippets_file:='$(find clf_cbf_qp)/urdf/iris_addons.gazebo' --inorder" />

  <!-- Spawn Models Globally using their Unique Descriptions -->
  <node name="spawn_$(arg ns1)" pkg="gazebo_ros" type="spawn_model" args="-urdf -param /robot_description_$(arg ns1) -model $(arg ns1) -x $(arg x1) -y $(arg y1) -z $(arg z1) -Y 3.14159" respawn="false" output="screen"/>


  <!-- Launch Controllers within their respective namespaces -->
  <!-- Controller for Drone 1 -->
  <group ns="$(arg ns1)">
    <node pkg="clf_cbf_qp" type="main_hummingbird_refactored.py" name="clf_iris_trajectory_controller" output="screen">
      <!-- Load common physical parameters from YAML -->
      <rosparam command="load" file="$(find clf_cbf_qp)/config/common_drone_params_hummingbird.yaml" />
      <rosparam command="load" file="$(find clf_cbf_qp)/config/obstacles.yaml" />

      <!-- Unique Params -->
      <param name="~trajectory_start_point" value="$(arg start1)" />
      <param name="~trajectory_end_point"   value="$(arg end1)" />
      <!-- Common Params (Referencing top-level args) -->
      <param name="namespace" value="$(arg ns1)" />
      <param name="all_drone_namespaces" value="$(arg drone_namespaces_list)"/>
      <param name="use_model_states" value="$(arg use_model_states_common)" />
      <param name="control_rate" value="$(arg control_rate_common)" />
      <param name="trajectory_duration"    value="$(arg trajectory_duration_common)" />
      <param name="fixed_yaw_deg"          value="$(arg fixed_yaw_deg_common)" />
      <param name="hover_pos_threshold" value="$(arg hover_pos_threshold_common)" />
      <param name="hover_vel_threshold" value="$(arg hover_vel_threshold_common)" />
      <param name="hover_stabilization_secs" value="$(arg hover_stabilization_secs_common)" />
      <param name="hover_yaw_ramp_secs" value="$(arg hover_yaw_ramp_secs_common)" />
      <param name="dynamic_obstacles" value="$(arg dynamic_obstacles_common)" />
    </node>
  </group>



  <!-- Multi-Drone Trajectory Plotter Node -->
  <node pkg="clf_cbf_qp" type="multi_straight_line_plotter.py" name="multi_drone_trajectory_plotter" output="screen">
    <param name="all_drone_namespaces" value="$(arg drone_namespaces_list)"/>
    <param name="plot_save_dir" value="$(find clf_cbf_qp)/plots"/>
    <param name="run_duration_secs" value="80.0"/>
    <param name="common_trajectory_duration" value="$(arg trajectory_duration_common)"/>
    <param name="use_filtering" value="true"/>
    <param name="filter_window_odom" value="31"/>
    <param name="filter_polyorder_odom" value="3"/>
    <param name="filter_window_omega" value="21"/>
    <param name="filter_polyorder_omega" value="3"/>
    <param name="filter_window_thrust" value="21"/>
    <param name="filter_polyorder_thrust" value="3"/>
    <param name="min_omega" value="0.0"/>
    <param name="max_omega" value="838.0"/>
    <param name="static_obstacles" value="$(arg dynamic_obstacles_common)" />
  </node>

</launch>